@page  
@* Creates the a Razor page. The @page must be place at the top of the 
code to indicate it can handle Html request.*@

@using RazorPagesPizza.Models
@*Refereces the models in the page. Any member defined in the 'RazorPagesPizza.Models'
can be reference in the page without the need of fully specefy the their namespace.
Insted of '@model RazorPagesPizza.Pages.PizzaModel' we can simply type 
'@model PizzaModel'*@

@model PizzaModel
@* The model is defined as @mode and represent the 'PizzaModel' class. 
The location is  'RazorPagesPizza.Pages'. It gives you access to the class PizzaModel and 
it allows you to manipulate the data inside. *@

@*@ symbol to transition from HTML to C#. If the @ symbol is followed by a Razor 
reserved keyword, it transitions into Razor-specific markup; otherwise, it transitions to C#.*@
@{
   ViewData["Title"] = "Pizza List 🍕";
}
@* Any component that have acess to the 'ViewData["Title"]' dictionary can retrive the value and 
used. see code below.*@

<h1>@ViewData["Title"] </h1> <!--the value in the @ViewData is retrived and used. -->
<form method="post" class="card p-3">
    <div class="row">
        <div asp-validation-summary="All"></div>
    </div>
    <div class="form-group mb-0 align-middle">
        <label asp-for="NewPizza.Name">Name</label>
        <input type="text" asp-for="NewPizza.Name" class="mr-5">
        <label asp-for="NewPizza.Size">Size</label>
        <select asp-for="NewPizza.Size" asp-items="Html.GetEnumSelectList<PizzaSize>()" class="mr-5"></select>
        <label asp-for="NewPizza.Price"></label>
        <input asp-for="NewPizza.Price" class="mr-5" />
        <label asp-for="NewPizza.IsGlutenFree">Gluten Free</label>
        <input type="checkbox" asp-for="NewPizza.IsGlutenFree" class="mr-5">
        <button class="btn btn-primary">Add</button>
    </div>
</form>
<table class="table mt-5">
    <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Name</th>
            <th scope="col">Price</th>
            <th scope="col">Size</th>
            <th scope="col">Gluten Free</th>
            <th scope="col">Delete</th>
        </tr>
    </thead>
    @foreach (var pizza in Model.pizzas)
    {
        <tr>
            <th>@pizza.Id</th>
            <td>@pizza.Name</td>
            <td>@($"{pizza.Price:C}")</td>
            <td>@pizza.Size</td>
            <td>@Model.GlutenFreeText(pizza)</td>
            <td>
                <form method="post" asp-page-handler="Delete" asp-route-id="@pizza.Id">
                    <button class="btn btn-danger">Delete</button>
                </form>
            </td>
        </tr>
    }
</table>

@section Scripts {
<partial name="_ValidationScriptsPartial" />
}
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
